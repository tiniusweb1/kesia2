"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/carousel/pics/index.ts":
/*!*******************************************!*\
  !*** ./components/carousel/pics/index.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getImages: function() { return /* binding */ getImages; },\n/* harmony export */   importImage: function() { return /* binding */ importImage; }\n/* harmony export */ });\n// components/carousel/pics/index.ts\n/**\r\n * Retrieves a list of image filenames.\r\n * Uses a default list if no list is provided.\r\n * @param imageList - An optional array of image filenames.\r\n * @returns A promise that resolves to an array of image filenames.\r\n */ const getImages = function() {\n    let imageList = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n        \"/images/img1.png\",\n        \"/images/img2.png\",\n        \"/images/img3.png\",\n        \"/images/img4.png\"\n    ];\n    return Promise.resolve(imageList);\n};\n/**\r\n * Dynamically imports an image and returns its URL.\r\n * Validates that the imported module's structure is as expected.\r\n * @param image - The filename of the image to import.\r\n * @returns A promise that resolves to an ImageResult.\r\n */ const importImage = async (image)=>{\n    try {\n        const importedModule = await __webpack_require__(\"./. lazy recursive ^\\\\.\\\\/public.*$\")(\"./public\".concat(image));\n        const imageUrl = importedModule.src || importedModule.default;\n        // Ensure the imported value is a string\n        if (typeof imageUrl !== \"string\") {\n            console.error(\"Unexpected value type for \".concat(image, \": \").concat(typeof imageUrl));\n            throw new Error(\"Unexpected value type\");\n        }\n        // Additional check to ensure it's a valid URL\n        if (!isValidUrl(imageUrl)) {\n            console.error(\"Invalid URL for \".concat(image, \": \").concat(imageUrl));\n            throw new Error(\"Invalid URL format\");\n        }\n        return {\n            status: \"fulfilled\",\n            value: imageUrl\n        };\n    } catch (error) {\n        console.error(\"Failed to import \".concat(image), error);\n        return {\n            status: \"rejected\",\n            reason: error\n        };\n    }\n};\n/**\r\n * Validates if the given string is a valid URL.\r\n * @param url - The string to validate.\r\n * @returns True if the string is a valid URL, otherwise false.\r\n */ const isValidUrl = (url)=>{\n    try {\n        new URL(url);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2Nhcm91c2VsL3BpY3MvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxvQ0FBb0M7QUFHcEM7Ozs7O0NBS0MsR0FDTSxNQUFNQSxZQUFZO1FBQ3JCQyw2RUFBc0I7UUFDbEI7UUFDQTtRQUNBO1FBQ0E7S0FDSDtXQUNtQkMsUUFBUUMsT0FBTyxDQUFDRjtFQUFVO0FBRWxEOzs7OztDQUtDLEdBQ00sTUFBTUcsY0FBYyxPQUFPQztJQUM5QixJQUFJO1FBQ0EsTUFBTUMsaUJBQWlCLE1BQU0sMkRBQU8sV0FBd0IsT0FBTkQsTUFBQUEsQ0FBQUE7UUFDdEQsTUFBTUUsV0FBV0QsZUFBZUUsR0FBRyxJQUFJRixlQUFlRyxPQUFPO1FBRTdELHdDQUF3QztRQUN4QyxJQUFJLE9BQU9GLGFBQWEsVUFBVTtZQUM5QkcsUUFBUUMsS0FBSyxDQUNULDZCQUF1QyxPQUFWTixPQUFNLE1BQW9CLE9BQWhCLE9BQU9FO1lBRWxELE1BQU0sSUFBSUssTUFBTTtRQUNwQjtRQUVBLDhDQUE4QztRQUM5QyxJQUFJLENBQUNDLFdBQVdOLFdBQVc7WUFDdkJHLFFBQVFDLEtBQUssQ0FBQyxtQkFBNkJKLE9BQVZGLE9BQU0sTUFBYSxPQUFURTtZQUMzQyxNQUFNLElBQUlLLE1BQU07UUFDcEI7UUFFQSxPQUFPO1lBQUVFLFFBQVE7WUFBYUMsT0FBT1I7UUFBUztJQUNsRCxFQUFFLE9BQU9JLE9BQU87UUFDWkQsUUFBUUMsS0FBSyxDQUFDLG9CQUEwQixPQUFOTixRQUFTTTtRQUMzQyxPQUFPO1lBQUVHLFFBQVE7WUFBWUUsUUFBUUw7UUFBb0I7SUFDN0Q7QUFDSixFQUFDO0FBRUQ7Ozs7Q0FJQyxHQUNELE1BQU1FLGFBQWEsQ0FBQ0k7SUFDaEIsSUFBSTtRQUNBLElBQUlDLElBQUlEO1FBQ1IsT0FBTztJQUNYLEVBQUUsVUFBTTtRQUNKLE9BQU87SUFDWDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvY2Fyb3VzZWwvcGljcy9pbmRleC50cz9iMjc0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNvbXBvbmVudHMvY2Fyb3VzZWwvcGljcy9pbmRleC50c1xyXG5pbXBvcnQgeyBJbWFnZVJlc3VsdCwgSW1hZ2VFcnJvciB9IGZyb20gJy4uLy4uLy4uL3NyYy90eXBlcydcclxuXHJcbi8qKlxyXG4gKiBSZXRyaWV2ZXMgYSBsaXN0IG9mIGltYWdlIGZpbGVuYW1lcy5cclxuICogVXNlcyBhIGRlZmF1bHQgbGlzdCBpZiBubyBsaXN0IGlzIHByb3ZpZGVkLlxyXG4gKiBAcGFyYW0gaW1hZ2VMaXN0IC0gQW4gb3B0aW9uYWwgYXJyYXkgb2YgaW1hZ2UgZmlsZW5hbWVzLlxyXG4gKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhbiBhcnJheSBvZiBpbWFnZSBmaWxlbmFtZXMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgZ2V0SW1hZ2VzID0gKFxyXG4gICAgaW1hZ2VMaXN0OiBzdHJpbmdbXSA9IFtcclxuICAgICAgICAnL2ltYWdlcy9pbWcxLnBuZycsXHJcbiAgICAgICAgJy9pbWFnZXMvaW1nMi5wbmcnLFxyXG4gICAgICAgICcvaW1hZ2VzL2ltZzMucG5nJyxcclxuICAgICAgICAnL2ltYWdlcy9pbWc0LnBuZycsXHJcbiAgICBdXHJcbik6IFByb21pc2U8c3RyaW5nW10+ID0+IFByb21pc2UucmVzb2x2ZShpbWFnZUxpc3QpXHJcblxyXG4vKipcclxuICogRHluYW1pY2FsbHkgaW1wb3J0cyBhbiBpbWFnZSBhbmQgcmV0dXJucyBpdHMgVVJMLlxyXG4gKiBWYWxpZGF0ZXMgdGhhdCB0aGUgaW1wb3J0ZWQgbW9kdWxlJ3Mgc3RydWN0dXJlIGlzIGFzIGV4cGVjdGVkLlxyXG4gKiBAcGFyYW0gaW1hZ2UgLSBUaGUgZmlsZW5hbWUgb2YgdGhlIGltYWdlIHRvIGltcG9ydC5cclxuICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYW4gSW1hZ2VSZXN1bHQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgaW1wb3J0SW1hZ2UgPSBhc3luYyAoaW1hZ2U6IHN0cmluZyk6IFByb21pc2U8SW1hZ2VSZXN1bHQ+ID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgaW1wb3J0ZWRNb2R1bGUgPSBhd2FpdCBpbXBvcnQoYC4uLy4uLy4uL3B1YmxpYyR7aW1hZ2V9YClcclxuICAgICAgICBjb25zdCBpbWFnZVVybCA9IGltcG9ydGVkTW9kdWxlLnNyYyB8fCBpbXBvcnRlZE1vZHVsZS5kZWZhdWx0XHJcblxyXG4gICAgICAgIC8vIEVuc3VyZSB0aGUgaW1wb3J0ZWQgdmFsdWUgaXMgYSBzdHJpbmdcclxuICAgICAgICBpZiAodHlwZW9mIGltYWdlVXJsICE9PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgICAgICAgICAgYFVuZXhwZWN0ZWQgdmFsdWUgdHlwZSBmb3IgJHtpbWFnZX06ICR7dHlwZW9mIGltYWdlVXJsfWBcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgdmFsdWUgdHlwZScpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBBZGRpdGlvbmFsIGNoZWNrIHRvIGVuc3VyZSBpdCdzIGEgdmFsaWQgVVJMXHJcbiAgICAgICAgaWYgKCFpc1ZhbGlkVXJsKGltYWdlVXJsKSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBJbnZhbGlkIFVSTCBmb3IgJHtpbWFnZX06ICR7aW1hZ2VVcmx9YClcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIFVSTCBmb3JtYXQnKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiAnZnVsZmlsbGVkJywgdmFsdWU6IGltYWdlVXJsIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihgRmFpbGVkIHRvIGltcG9ydCAke2ltYWdlfWAsIGVycm9yKVxyXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogJ3JlamVjdGVkJywgcmVhc29uOiBlcnJvciBhcyBJbWFnZUVycm9yIH1cclxuICAgIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFZhbGlkYXRlcyBpZiB0aGUgZ2l2ZW4gc3RyaW5nIGlzIGEgdmFsaWQgVVJMLlxyXG4gKiBAcGFyYW0gdXJsIC0gVGhlIHN0cmluZyB0byB2YWxpZGF0ZS5cclxuICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgc3RyaW5nIGlzIGEgdmFsaWQgVVJMLCBvdGhlcndpc2UgZmFsc2UuXHJcbiAqL1xyXG5jb25zdCBpc1ZhbGlkVXJsID0gKHVybDogc3RyaW5nKTogYm9vbGVhbiA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIG5ldyBVUkwodXJsKVxyXG4gICAgICAgIHJldHVybiB0cnVlXHJcbiAgICB9IGNhdGNoIHtcclxuICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgIH1cclxufVxyXG4iXSwibmFtZXMiOlsiZ2V0SW1hZ2VzIiwiaW1hZ2VMaXN0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJpbXBvcnRJbWFnZSIsImltYWdlIiwiaW1wb3J0ZWRNb2R1bGUiLCJpbWFnZVVybCIsInNyYyIsImRlZmF1bHQiLCJjb25zb2xlIiwiZXJyb3IiLCJFcnJvciIsImlzVmFsaWRVcmwiLCJzdGF0dXMiLCJ2YWx1ZSIsInJlYXNvbiIsInVybCIsIlVSTCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/carousel/pics/index.ts\n"));

/***/ })

});