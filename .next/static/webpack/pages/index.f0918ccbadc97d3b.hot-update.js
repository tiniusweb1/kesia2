"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/expand_text/ExpandCollapse.ts":
/*!**************************************************!*\
  !*** ./components/expand_text/ExpandCollapse.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initExpandCollapse: function() { return /* binding */ initExpandCollapse; }\n/* harmony export */ });\n// components/expand_text/ExpandCollapse.ts\nconst initExpandCollapse = ()=>{\n    if (typeof document !== \"undefined\") {\n        const wrappers = document.querySelectorAll(\".textContainer\");\n        const buttons = document.querySelectorAll(\".button\");\n        const initialHeight = \"100px\"; // Set this to your initial height\n        wrappers.forEach((wrapper, index)=>{\n            const button = buttons[index];\n            if (wrapper) {\n                const expandedHeight = wrapper.scrollHeight + \"px\"; // Automatically calculates full height\n                // Set initial height\n                wrapper.style.height = initialHeight;\n                if (button) {\n                    button.addEventListener(\"click\", ()=>{\n                        if (wrapper.style.height === initialHeight) {\n                            wrapper.style.height = expandedHeight;\n                            button.innerHTML = \"> se mindre\"; // Change button text to \"see less\"\n                        } else {\n                            wrapper.style.height = initialHeight;\n                            button.innerHTML = \"> se mer\"; // Change button text back to \"see more\"\n                        }\n                    });\n                }\n            }\n        });\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2V4cGFuZF90ZXh0L0V4cGFuZENvbGxhcHNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSwyQ0FBMkM7QUFDcEMsTUFBTUEscUJBQXFCO0lBQzlCLElBQUksT0FBT0MsYUFBYSxhQUFhO1FBQ2pDLE1BQU1DLFdBQVdELFNBQVNFLGdCQUFnQixDQUFDO1FBQzNDLE1BQU1DLFVBQVVILFNBQVNFLGdCQUFnQixDQUFDO1FBQzFDLE1BQU1FLGdCQUFnQixTQUFTLGtDQUFrQztRQUVqRUgsU0FBU0ksT0FBTyxDQUFDLENBQUNDLFNBQVNDO1lBQ3ZCLE1BQU1DLFNBQVNMLE9BQU8sQ0FBQ0ksTUFBTTtZQUM3QixJQUFJRCxTQUFTO2dCQUNULE1BQU1HLGlCQUFpQkgsUUFBUUksWUFBWSxHQUFHLE1BQU0sdUNBQXVDO2dCQUUzRixxQkFBcUI7Z0JBQ3JCSixRQUFRSyxLQUFLLENBQUNDLE1BQU0sR0FBR1I7Z0JBRXZCLElBQUlJLFFBQVE7b0JBQ1JBLE9BQU9LLGdCQUFnQixDQUFDLFNBQVM7d0JBQzdCLElBQUlQLFFBQVFLLEtBQUssQ0FBQ0MsTUFBTSxLQUFLUixlQUFlOzRCQUN4Q0UsUUFBUUssS0FBSyxDQUFDQyxNQUFNLEdBQUdIOzRCQUN2QkQsT0FBT00sU0FBUyxHQUFHLGVBQWUsbUNBQW1DO3dCQUN6RSxPQUFPOzRCQUNIUixRQUFRSyxLQUFLLENBQUNDLE1BQU0sR0FBR1I7NEJBQ3ZCSSxPQUFPTSxTQUFTLEdBQUcsWUFBWSx3Q0FBd0M7d0JBQzNFO29CQUNKO2dCQUNKO1lBQ0o7UUFDSjtJQUNKO0FBQ0osRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL2V4cGFuZF90ZXh0L0V4cGFuZENvbGxhcHNlLnRzPzk5MTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29tcG9uZW50cy9leHBhbmRfdGV4dC9FeHBhbmRDb2xsYXBzZS50c1xyXG5leHBvcnQgY29uc3QgaW5pdEV4cGFuZENvbGxhcHNlID0gKCkgPT4ge1xyXG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBjb25zdCB3cmFwcGVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50ZXh0Q29udGFpbmVyJykgYXMgTm9kZUxpc3RPZjxIVE1MRWxlbWVudD47XHJcbiAgICAgICAgY29uc3QgYnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5idXR0b24nKSBhcyBOb2RlTGlzdE9mPEhUTUxFbGVtZW50PjtcclxuICAgICAgICBjb25zdCBpbml0aWFsSGVpZ2h0ID0gJzEwMHB4JzsgLy8gU2V0IHRoaXMgdG8geW91ciBpbml0aWFsIGhlaWdodFxyXG5cclxuICAgICAgICB3cmFwcGVycy5mb3JFYWNoKCh3cmFwcGVyLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBidXR0b24gPSBidXR0b25zW2luZGV4XTtcclxuICAgICAgICAgICAgaWYgKHdyYXBwZXIpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGV4cGFuZGVkSGVpZ2h0ID0gd3JhcHBlci5zY3JvbGxIZWlnaHQgKyAncHgnOyAvLyBBdXRvbWF0aWNhbGx5IGNhbGN1bGF0ZXMgZnVsbCBoZWlnaHRcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBTZXQgaW5pdGlhbCBoZWlnaHRcclxuICAgICAgICAgICAgICAgIHdyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gaW5pdGlhbEhlaWdodDtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoYnV0dG9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAod3JhcHBlci5zdHlsZS5oZWlnaHQgPT09IGluaXRpYWxIZWlnaHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gZXhwYW5kZWRIZWlnaHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXR0b24uaW5uZXJIVE1MID0gJz4gc2UgbWluZHJlJzsgLy8gQ2hhbmdlIGJ1dHRvbiB0ZXh0IHRvIFwic2VlIGxlc3NcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JhcHBlci5zdHlsZS5oZWlnaHQgPSBpbml0aWFsSGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uLmlubmVySFRNTCA9ICc+IHNlIG1lcic7IC8vIENoYW5nZSBidXR0b24gdGV4dCBiYWNrIHRvIFwic2VlIG1vcmVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufTtcclxuXHJcblxyXG4iXSwibmFtZXMiOlsiaW5pdEV4cGFuZENvbGxhcHNlIiwiZG9jdW1lbnQiLCJ3cmFwcGVycyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJidXR0b25zIiwiaW5pdGlhbEhlaWdodCIsImZvckVhY2giLCJ3cmFwcGVyIiwiaW5kZXgiLCJidXR0b24iLCJleHBhbmRlZEhlaWdodCIsInNjcm9sbEhlaWdodCIsInN0eWxlIiwiaGVpZ2h0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImlubmVySFRNTCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/expand_text/ExpandCollapse.ts\n"));

/***/ })

});