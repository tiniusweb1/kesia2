"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/expand_text/ExpandCollapse.ts":
/*!**************************************************!*\
  !*** ./components/expand_text/ExpandCollapse.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initExpandCollapse: function() { return /* binding */ initExpandCollapse; }\n/* harmony export */ });\n// components/expand_text/ExpandCollapse.ts\nconst initExpandCollapse = (styles)=>{\n    if (typeof document !== \"undefined\") {\n        const wrappers = document.querySelectorAll(\".\".concat(styles.textContainer));\n        const buttons = document.querySelectorAll(\".\".concat(styles.button));\n        const initialHeight = \"100px\"; // Set this to your initial height\n        wrappers.forEach((wrapper, index)=>{\n            const button = buttons[index];\n            if (wrapper) {\n                const expandedHeight = wrapper.scrollHeight + \"px\"; // Automatically calculates full height\n                // Set initial height\n                wrapper.style.height = initialHeight;\n                if (button) {\n                    button.addEventListener(\"click\", ()=>{\n                        const isExpanded = wrapper.style.height !== initialHeight;\n                        wrapper.style.height = isExpanded ? initialHeight : expandedHeight;\n                        button.innerHTML = isExpanded ? \"&gt; se mer\" : \"&gt; se mindre\"; // Toggle button text\n                    });\n                }\n            }\n        });\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2V4cGFuZF90ZXh0L0V4cGFuZENvbGxhcHNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSwyQ0FBMkM7QUFDcEMsTUFBTUEscUJBQXFCLENBQUNDO0lBQy9CLElBQUksT0FBT0MsYUFBYSxhQUFhO1FBQ2pDLE1BQU1DLFdBQVdELFNBQVNFLGdCQUFnQixDQUFDLElBQXlCLE9BQXJCSCxPQUFPSSxhQUFhO1FBQ25FLE1BQU1DLFVBQVVKLFNBQVNFLGdCQUFnQixDQUFDLElBQWtCLE9BQWRILE9BQU9NLE1BQU07UUFDM0QsTUFBTUMsZ0JBQWdCLFNBQVMsa0NBQWtDO1FBRWpFTCxTQUFTTSxPQUFPLENBQUMsQ0FBQ0MsU0FBU0M7WUFDdkIsTUFBTUosU0FBU0QsT0FBTyxDQUFDSyxNQUFNO1lBQzdCLElBQUlELFNBQVM7Z0JBQ1QsTUFBTUUsaUJBQWlCRixRQUFRRyxZQUFZLEdBQUcsTUFBTSx1Q0FBdUM7Z0JBRTNGLHFCQUFxQjtnQkFDckJILFFBQVFJLEtBQUssQ0FBQ0MsTUFBTSxHQUFHUDtnQkFFdkIsSUFBSUQsUUFBUTtvQkFDUkEsT0FBT1MsZ0JBQWdCLENBQUMsU0FBUzt3QkFDN0IsTUFBTUMsYUFBYVAsUUFBUUksS0FBSyxDQUFDQyxNQUFNLEtBQUtQO3dCQUM1Q0UsUUFBUUksS0FBSyxDQUFDQyxNQUFNLEdBQUdFLGFBQWFULGdCQUFnQkk7d0JBQ3BETCxPQUFPVyxTQUFTLEdBQUdELGFBQWEsZ0JBQWdCLGtCQUFrQixxQkFBcUI7b0JBQzNGO2dCQUNKO1lBQ0o7UUFDSjtJQUNKO0FBQ0osRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL2V4cGFuZF90ZXh0L0V4cGFuZENvbGxhcHNlLnRzPzk5MTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29tcG9uZW50cy9leHBhbmRfdGV4dC9FeHBhbmRDb2xsYXBzZS50c1xyXG5leHBvcnQgY29uc3QgaW5pdEV4cGFuZENvbGxhcHNlID0gKHN0eWxlczogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSkgPT4ge1xyXG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBjb25zdCB3cmFwcGVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYC4ke3N0eWxlcy50ZXh0Q29udGFpbmVyfWApIGFzIE5vZGVMaXN0T2Y8SFRNTEVsZW1lbnQ+O1xyXG4gICAgICAgIGNvbnN0IGJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAuJHtzdHlsZXMuYnV0dG9ufWApIGFzIE5vZGVMaXN0T2Y8SFRNTEVsZW1lbnQ+O1xyXG4gICAgICAgIGNvbnN0IGluaXRpYWxIZWlnaHQgPSAnMTAwcHgnOyAvLyBTZXQgdGhpcyB0byB5b3VyIGluaXRpYWwgaGVpZ2h0XHJcblxyXG4gICAgICAgIHdyYXBwZXJzLmZvckVhY2goKHdyYXBwZXIsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGJ1dHRvbiA9IGJ1dHRvbnNbaW5kZXhdO1xyXG4gICAgICAgICAgICBpZiAod3JhcHBlcikge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZXhwYW5kZWRIZWlnaHQgPSB3cmFwcGVyLnNjcm9sbEhlaWdodCArICdweCc7IC8vIEF1dG9tYXRpY2FsbHkgY2FsY3VsYXRlcyBmdWxsIGhlaWdodFxyXG5cclxuICAgICAgICAgICAgICAgIC8vIFNldCBpbml0aWFsIGhlaWdodFxyXG4gICAgICAgICAgICAgICAgd3JhcHBlci5zdHlsZS5oZWlnaHQgPSBpbml0aWFsSGVpZ2h0O1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChidXR0b24pIHtcclxuICAgICAgICAgICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzRXhwYW5kZWQgPSB3cmFwcGVyLnN0eWxlLmhlaWdodCAhPT0gaW5pdGlhbEhlaWdodDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd3JhcHBlci5zdHlsZS5oZWlnaHQgPSBpc0V4cGFuZGVkID8gaW5pdGlhbEhlaWdodCA6IGV4cGFuZGVkSGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBidXR0b24uaW5uZXJIVE1MID0gaXNFeHBhbmRlZCA/ICcmZ3Q7IHNlIG1lcicgOiAnJmd0OyBzZSBtaW5kcmUnOyAvLyBUb2dnbGUgYnV0dG9uIHRleHRcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59O1xyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJpbml0RXhwYW5kQ29sbGFwc2UiLCJzdHlsZXMiLCJkb2N1bWVudCIsIndyYXBwZXJzIiwicXVlcnlTZWxlY3RvckFsbCIsInRleHRDb250YWluZXIiLCJidXR0b25zIiwiYnV0dG9uIiwiaW5pdGlhbEhlaWdodCIsImZvckVhY2giLCJ3cmFwcGVyIiwiaW5kZXgiLCJleHBhbmRlZEhlaWdodCIsInNjcm9sbEhlaWdodCIsInN0eWxlIiwiaGVpZ2h0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImlzRXhwYW5kZWQiLCJpbm5lckhUTUwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/expand_text/ExpandCollapse.ts\n"));

/***/ })

});