"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/carousel/pics/index.ts":
/*!*******************************************!*\
  !*** ./components/carousel/pics/index.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getImages: function() { return /* binding */ getImages; },\n/* harmony export */   getPlaceholderImages: function() { return /* binding */ getPlaceholderImages; },\n/* harmony export */   importImage: function() { return /* binding */ importImage; }\n/* harmony export */ });\n// components/carousel/pics/index.ts\n/**\r\n * Retrieves a list of image filenames.\r\n * Uses a default list if no list is provided.\r\n * @param imageList - An optional array of image filenames.\r\n * @returns A promise that resolves to an array of image filenames.\r\n */ const getImages = function() {\n    let imageList = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n        \"/images/img1.png\",\n        \"/images/img2.png\",\n        \"/images/img3.png\",\n        \"/images/img4.png\"\n    ];\n    return Promise.resolve(imageList);\n};\n/**\r\n * Dynamically imports an image and returns its URL.\r\n * Validates that the imported module's structure is as expected.\r\n * @param image - The filename of the image to import.\r\n * @returns A promise that resolves to an ImageResult.\r\n */ const importImage = async (image)=>{\n    try {\n        const importedModule = await __webpack_require__(\"./. lazy recursive ^\\\\.\\\\/public.*$\")(\"./public\".concat(image));\n        // Access the correct property based on how the module is structured\n        const imageUrl = importedModule.src || importedModule.default || importedModule;\n        if (typeof imageUrl !== \"string\") {\n            console.error(\"Unexpected value type for \".concat(image, \": \").concat(typeof imageUrl));\n            throw new Error(\"Unexpected value type\");\n        }\n        return {\n            status: \"fulfilled\",\n            value: imageUrl\n        };\n    } catch (error) {\n        console.error(\"Failed to import \".concat(image), error);\n        return {\n            status: \"rejected\",\n            reason: error\n        };\n    }\n};\n/**\r\n * Returns a list of placeholder images.\r\n * @returns An array of ImageResult representing placeholder images.\r\n */ const getPlaceholderImages = ()=>{\n    return [\n        {\n            status: \"fulfilled\",\n            value: \"/images/placeholder1.webp\"\n        },\n        {\n            status: \"fulfilled\",\n            value: \"/images/placeholder2.webp\"\n        },\n        {\n            status: \"fulfilled\",\n            value: \"/images/placeholder3.webp\"\n        },\n        {\n            status: \"fulfilled\",\n            value: \"/images/placeholder4.webp\"\n        }\n    ];\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2Nhcm91c2VsL3BpY3MvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsb0NBQW9DO0FBR3BDOzs7OztDQUtDLEdBQ00sTUFBTUEsWUFBWTtRQUNyQkMsNkVBQXNCO1FBQ2xCO1FBQ0E7UUFDQTtRQUNBO0tBQ0g7V0FDbUJDLFFBQVFDLE9BQU8sQ0FBQ0Y7RUFBVTtBQUVsRDs7Ozs7Q0FLQyxHQUNNLE1BQU1HLGNBQWMsT0FBT0M7SUFDOUIsSUFBSTtRQUNBLE1BQU1DLGlCQUFpQixNQUFNLDJEQUFPLFdBQXdCLE9BQU5ELE1BQUFBLENBQUFBO1FBQ3RELG9FQUFvRTtRQUNwRSxNQUFNRSxXQUNGRCxlQUFlRSxHQUFHLElBQUlGLGVBQWVHLE9BQU8sSUFBSUg7UUFFcEQsSUFBSSxPQUFPQyxhQUFhLFVBQVU7WUFDOUJHLFFBQVFDLEtBQUssQ0FDVCw2QkFBdUMsT0FBVk4sT0FBTSxNQUFvQixPQUFoQixPQUFPRTtZQUVsRCxNQUFNLElBQUlLLE1BQU07UUFDcEI7UUFFQSxPQUFPO1lBQUVDLFFBQVE7WUFBYUMsT0FBT1A7UUFBUztJQUNsRCxFQUFFLE9BQU9JLE9BQU87UUFDWkQsUUFBUUMsS0FBSyxDQUFDLG9CQUEwQixPQUFOTixRQUFTTTtRQUMzQyxPQUFPO1lBQUVFLFFBQVE7WUFBWUUsUUFBUUo7UUFBb0I7SUFDN0Q7QUFDSixFQUFDO0FBRUQ7OztDQUdDLEdBQ00sTUFBTUssdUJBQXVCO0lBQ2hDLE9BQU87UUFDSDtZQUFFSCxRQUFRO1lBQWFDLE9BQU87UUFBNEI7UUFDMUQ7WUFBRUQsUUFBUTtZQUFhQyxPQUFPO1FBQTRCO1FBQzFEO1lBQUVELFFBQVE7WUFBYUMsT0FBTztRQUE0QjtRQUMxRDtZQUFFRCxRQUFRO1lBQWFDLE9BQU87UUFBNEI7S0FDN0Q7QUFDTCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvY2Fyb3VzZWwvcGljcy9pbmRleC50cz9iMjc0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNvbXBvbmVudHMvY2Fyb3VzZWwvcGljcy9pbmRleC50c1xyXG5pbXBvcnQgeyBJbWFnZVJlc3VsdCwgSW1hZ2VFcnJvciB9IGZyb20gJy4uLy4uLy4uL3NyYy90eXBlcydcclxuXHJcbi8qKlxyXG4gKiBSZXRyaWV2ZXMgYSBsaXN0IG9mIGltYWdlIGZpbGVuYW1lcy5cclxuICogVXNlcyBhIGRlZmF1bHQgbGlzdCBpZiBubyBsaXN0IGlzIHByb3ZpZGVkLlxyXG4gKiBAcGFyYW0gaW1hZ2VMaXN0IC0gQW4gb3B0aW9uYWwgYXJyYXkgb2YgaW1hZ2UgZmlsZW5hbWVzLlxyXG4gKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhbiBhcnJheSBvZiBpbWFnZSBmaWxlbmFtZXMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgZ2V0SW1hZ2VzID0gKFxyXG4gICAgaW1hZ2VMaXN0OiBzdHJpbmdbXSA9IFtcclxuICAgICAgICAnL2ltYWdlcy9pbWcxLnBuZycsXHJcbiAgICAgICAgJy9pbWFnZXMvaW1nMi5wbmcnLFxyXG4gICAgICAgICcvaW1hZ2VzL2ltZzMucG5nJyxcclxuICAgICAgICAnL2ltYWdlcy9pbWc0LnBuZycsXHJcbiAgICBdXHJcbik6IFByb21pc2U8c3RyaW5nW10+ID0+IFByb21pc2UucmVzb2x2ZShpbWFnZUxpc3QpXHJcblxyXG4vKipcclxuICogRHluYW1pY2FsbHkgaW1wb3J0cyBhbiBpbWFnZSBhbmQgcmV0dXJucyBpdHMgVVJMLlxyXG4gKiBWYWxpZGF0ZXMgdGhhdCB0aGUgaW1wb3J0ZWQgbW9kdWxlJ3Mgc3RydWN0dXJlIGlzIGFzIGV4cGVjdGVkLlxyXG4gKiBAcGFyYW0gaW1hZ2UgLSBUaGUgZmlsZW5hbWUgb2YgdGhlIGltYWdlIHRvIGltcG9ydC5cclxuICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYW4gSW1hZ2VSZXN1bHQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgaW1wb3J0SW1hZ2UgPSBhc3luYyAoaW1hZ2U6IHN0cmluZyk6IFByb21pc2U8SW1hZ2VSZXN1bHQ+ID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgaW1wb3J0ZWRNb2R1bGUgPSBhd2FpdCBpbXBvcnQoYC4uLy4uLy4uL3B1YmxpYyR7aW1hZ2V9YClcclxuICAgICAgICAvLyBBY2Nlc3MgdGhlIGNvcnJlY3QgcHJvcGVydHkgYmFzZWQgb24gaG93IHRoZSBtb2R1bGUgaXMgc3RydWN0dXJlZFxyXG4gICAgICAgIGNvbnN0IGltYWdlVXJsID1cclxuICAgICAgICAgICAgaW1wb3J0ZWRNb2R1bGUuc3JjIHx8IGltcG9ydGVkTW9kdWxlLmRlZmF1bHQgfHwgaW1wb3J0ZWRNb2R1bGVcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBpbWFnZVVybCAhPT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICAgICAgICAgIGBVbmV4cGVjdGVkIHZhbHVlIHR5cGUgZm9yICR7aW1hZ2V9OiAke3R5cGVvZiBpbWFnZVVybH1gXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmV4cGVjdGVkIHZhbHVlIHR5cGUnKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiAnZnVsZmlsbGVkJywgdmFsdWU6IGltYWdlVXJsIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihgRmFpbGVkIHRvIGltcG9ydCAke2ltYWdlfWAsIGVycm9yKVxyXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogJ3JlamVjdGVkJywgcmVhc29uOiBlcnJvciBhcyBJbWFnZUVycm9yIH1cclxuICAgIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFJldHVybnMgYSBsaXN0IG9mIHBsYWNlaG9sZGVyIGltYWdlcy5cclxuICogQHJldHVybnMgQW4gYXJyYXkgb2YgSW1hZ2VSZXN1bHQgcmVwcmVzZW50aW5nIHBsYWNlaG9sZGVyIGltYWdlcy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBnZXRQbGFjZWhvbGRlckltYWdlcyA9ICgpOiBJbWFnZVJlc3VsdFtdID0+IHtcclxuICAgIHJldHVybiBbXHJcbiAgICAgICAgeyBzdGF0dXM6ICdmdWxmaWxsZWQnLCB2YWx1ZTogJy9pbWFnZXMvcGxhY2Vob2xkZXIxLndlYnAnIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6ICdmdWxmaWxsZWQnLCB2YWx1ZTogJy9pbWFnZXMvcGxhY2Vob2xkZXIyLndlYnAnIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6ICdmdWxmaWxsZWQnLCB2YWx1ZTogJy9pbWFnZXMvcGxhY2Vob2xkZXIzLndlYnAnIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6ICdmdWxmaWxsZWQnLCB2YWx1ZTogJy9pbWFnZXMvcGxhY2Vob2xkZXI0LndlYnAnIH0sXHJcbiAgICBdXHJcbn1cclxuIl0sIm5hbWVzIjpbImdldEltYWdlcyIsImltYWdlTGlzdCIsIlByb21pc2UiLCJyZXNvbHZlIiwiaW1wb3J0SW1hZ2UiLCJpbWFnZSIsImltcG9ydGVkTW9kdWxlIiwiaW1hZ2VVcmwiLCJzcmMiLCJkZWZhdWx0IiwiY29uc29sZSIsImVycm9yIiwiRXJyb3IiLCJzdGF0dXMiLCJ2YWx1ZSIsInJlYXNvbiIsImdldFBsYWNlaG9sZGVySW1hZ2VzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/carousel/pics/index.ts\n"));

/***/ })

});