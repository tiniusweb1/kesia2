"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/expand_text/ExpandCollapse.ts":
/*!**************************************************!*\
  !*** ./components/expand_text/ExpandCollapse.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initExpandCollapse: function() { return /* binding */ initExpandCollapse; }\n/* harmony export */ });\nconst initExpandCollapse = ()=>{\n    const wrappers = document.querySelectorAll(\".textContainer\");\n    const buttons = document.querySelectorAll(\".button\");\n    const initialHeight = \"100px\"; // Set this to your initial height\n    wrappers.forEach((wrapper, index)=>{\n        const button = buttons[index];\n        if (wrapper) {\n            const expandedHeight = wrapper.scrollHeight + \"px\"; // Automatically calculates full height\n            // Set initial height\n            wrapper.style.height = initialHeight;\n            if (button) {\n                button.addEventListener(\"click\", ()=>{\n                    if (wrapper.style.height === initialHeight) {\n                        wrapper.style.height = expandedHeight;\n                        button.innerHTML = \"> se mindre\"; // Change button text to \"see less\"\n                    } else {\n                        wrapper.style.height = initialHeight;\n                        button.innerHTML = \"> se mer\"; // Change button text back to \"see more\"\n                    }\n                });\n            }\n        }\n    });\n};\n// Directly call the function for testing\ninitExpandCollapse();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2V4cGFuZF90ZXh0L0V4cGFuZENvbGxhcHNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxxQkFBcUI7SUFDOUIsTUFBTUMsV0FBV0MsU0FBU0MsZ0JBQWdCLENBQUM7SUFDM0MsTUFBTUMsVUFBVUYsU0FBU0MsZ0JBQWdCLENBQUM7SUFDMUMsTUFBTUUsZ0JBQWdCLFNBQVMsa0NBQWtDO0lBRWpFSixTQUFTSyxPQUFPLENBQUMsQ0FBQ0MsU0FBU0M7UUFDdkIsTUFBTUMsU0FBU0wsT0FBTyxDQUFDSSxNQUFNO1FBQzdCLElBQUlELFNBQVM7WUFDVCxNQUFNRyxpQkFBaUJILFFBQVFJLFlBQVksR0FBRyxNQUFNLHVDQUF1QztZQUUzRixxQkFBcUI7WUFDckJKLFFBQVFLLEtBQUssQ0FBQ0MsTUFBTSxHQUFHUjtZQUV2QixJQUFJSSxRQUFRO2dCQUNSQSxPQUFPSyxnQkFBZ0IsQ0FBQyxTQUFTO29CQUM3QixJQUFJUCxRQUFRSyxLQUFLLENBQUNDLE1BQU0sS0FBS1IsZUFBZTt3QkFDeENFLFFBQVFLLEtBQUssQ0FBQ0MsTUFBTSxHQUFHSDt3QkFDdkJELE9BQU9NLFNBQVMsR0FBRyxlQUFlLG1DQUFtQztvQkFDekUsT0FBTzt3QkFDSFIsUUFBUUssS0FBSyxDQUFDQyxNQUFNLEdBQUdSO3dCQUN2QkksT0FBT00sU0FBUyxHQUFHLFlBQVksd0NBQXdDO29CQUMzRTtnQkFDSjtZQUNKO1FBQ0o7SUFDSjtBQUNKLEVBQUU7QUFFRix5Q0FBeUM7QUFDekNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvZXhwYW5kX3RleHQvRXhwYW5kQ29sbGFwc2UudHM/OTkxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgaW5pdEV4cGFuZENvbGxhcHNlID0gKCkgPT4ge1xyXG4gICAgY29uc3Qgd3JhcHBlcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGV4dENvbnRhaW5lcicpIGFzIE5vZGVMaXN0T2Y8SFRNTEVsZW1lbnQ+O1xyXG4gICAgY29uc3QgYnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5idXR0b24nKSBhcyBOb2RlTGlzdE9mPEhUTUxFbGVtZW50PjtcclxuICAgIGNvbnN0IGluaXRpYWxIZWlnaHQgPSAnMTAwcHgnOyAvLyBTZXQgdGhpcyB0byB5b3VyIGluaXRpYWwgaGVpZ2h0XHJcblxyXG4gICAgd3JhcHBlcnMuZm9yRWFjaCgod3JhcHBlciwgaW5kZXgpID0+IHtcclxuICAgICAgICBjb25zdCBidXR0b24gPSBidXR0b25zW2luZGV4XTtcclxuICAgICAgICBpZiAod3JhcHBlcikge1xyXG4gICAgICAgICAgICBjb25zdCBleHBhbmRlZEhlaWdodCA9IHdyYXBwZXIuc2Nyb2xsSGVpZ2h0ICsgJ3B4JzsgLy8gQXV0b21hdGljYWxseSBjYWxjdWxhdGVzIGZ1bGwgaGVpZ2h0XHJcblxyXG4gICAgICAgICAgICAvLyBTZXQgaW5pdGlhbCBoZWlnaHRcclxuICAgICAgICAgICAgd3JhcHBlci5zdHlsZS5oZWlnaHQgPSBpbml0aWFsSGVpZ2h0O1xyXG5cclxuICAgICAgICAgICAgaWYgKGJ1dHRvbikge1xyXG4gICAgICAgICAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh3cmFwcGVyLnN0eWxlLmhlaWdodCA9PT0gaW5pdGlhbEhlaWdodCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3cmFwcGVyLnN0eWxlLmhlaWdodCA9IGV4cGFuZGVkSGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBidXR0b24uaW5uZXJIVE1MID0gJz4gc2UgbWluZHJlJzsgLy8gQ2hhbmdlIGJ1dHRvbiB0ZXh0IHRvIFwic2VlIGxlc3NcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gaW5pdGlhbEhlaWdodDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uLmlubmVySFRNTCA9ICc+IHNlIG1lcic7IC8vIENoYW5nZSBidXR0b24gdGV4dCBiYWNrIHRvIFwic2VlIG1vcmVcIlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn07XHJcblxyXG4vLyBEaXJlY3RseSBjYWxsIHRoZSBmdW5jdGlvbiBmb3IgdGVzdGluZ1xyXG5pbml0RXhwYW5kQ29sbGFwc2UoKTtcclxuIl0sIm5hbWVzIjpbImluaXRFeHBhbmRDb2xsYXBzZSIsIndyYXBwZXJzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnV0dG9ucyIsImluaXRpYWxIZWlnaHQiLCJmb3JFYWNoIiwid3JhcHBlciIsImluZGV4IiwiYnV0dG9uIiwiZXhwYW5kZWRIZWlnaHQiLCJzY3JvbGxIZWlnaHQiLCJzdHlsZSIsImhlaWdodCIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbm5lckhUTUwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/expand_text/ExpandCollapse.ts\n"));

/***/ })

});